
시스템 구조 및 게임 규칙
=========================

여기서는 전체 시스템의 구조와 게임의 규칙을 설명한다.

시스템 구조
------------

::

   sc2minigame
    ├── sc2: python-sc2 (python-sc2를 일부 수정한 버전)
    ├── maps: 경진대회 용 맵
    ├── docs: 문서파일 모음
    ├── run_sc2minigame.py: 게임 실행 파일 예
    └── bots: AI 모음
          ├── nc0.dummy_bot: 아무 행동도 하지 않는 예제
          ├── nc1.rush_bot: 적 사령부로 바로 공격하는 예제
          ├── nc2.simple_combat_bot: 기본 모듈 구조 구현한 예제
          ├── nc3.push_bot: 현재 병력 규모에 따라 전선을 전진시키는 예제
          ├── nc4.army_bot: 유닛 종류에 따라 다른 액션을 결정하는 예제
          .
          . 
          .


기존 python-sc2에서 일부 요소를 수정했지만, 대부분 기능은 기존 python-sc2와 같다.

경진대회의 게임 규칙은 maps 폴더에 있는 맵 파일에 구현되어 있다.

docs 폴더에는 문서파일이 저장되어 있다.

개별 AI의 구현과 연관된 코드는 bots 폴더 밑, 해당 Bot 폴더에 위치한다. 
따라서, 개별 Bot은 코드를 공유하지 않고 서로 독립적으로 작동해야한다.
여기에는 기본적인 예제가 포함되어 있다.

이외 폴더에는 현재 플랫폼에서 필수적이지는 않지만, 플랫폼 이전 버전과 예제에서 사용한
모듈을 포함하고 있다. 향후 정리할 예정이다.


게임 규칙
---------

.. note::

   기존 StarCraft II에서 플레이어는 다양한 작접을 동시에 처리해야하기 때문에,
   게임을 플레이할 수 있는 AI를 개발하는데도, 많은 작업이 필요하다.
   이는 경진대회에서 사용하기에는 문제 규모가 너무 크므로,
   유닛 생산과 유닛 컨트롤(micro control)을 제외한 나머지 요소를 
   생략한 새로운 게임 환경을 구현했다.


**기본규칙**

이 게임의 최종 목표는 자신의 사령부를 지키면서 적의 사령부를 파괴하는 것이다. 
자원 수집은 자동(광물 20/1 sec., 베스핀 5/1 sec., 보급 200 고정)으로 이뤄지고, 
건설은 불가능, 모든 지형은 평지이다. 
플레이어 1 (red)는 언제나 왼쪽, 플레이어 2 (blue)는 언제나 오른쪽에서 시작한다.

.. figure:: _static/command_center_units.png
    :figwidth: 600
 
    사령부에서 생산 가능한 유닛들 

사령부에서는 12종류의 테란 유닛(해병, 불곰, 사신, 유령, 화염차, 공성전차, 토르, 
의료선, 바이킹, 밴시, 밤까마귀, 전투순양함)과 전술핵을 생산가능하며, 지게로봇을 소환 가능하다.
생산비용은 기본 게임과 동일하며, 모든 유닛의 생산시간은 1초(게임시간)이다.

전투자극제, 전투방패, 은폐장 등 일부 업그레이드는 기본 제공된다(구체적인 사항은 맵에디터로 확인 가능).

maps 폴더의 NCF-2020-v4.SC2Map에 게임 규칙을 구현했다(v4는 이후 바뀔 수 있음).

그 외 규칙은 기존 게임과 같다. 필요에 따라 게임 규칙이 일부 변경될 수 는 있다.

**승리조건**

상대방의 사령부를 먼저 파괴하면 게임에서 승리한다.

만약 제한시간(게임시간 600초)를 초과하면, 서로 상대방에게 가한 총 피해(HP)의 총합을 비교해서,
더 많은 피해를 입힌쪽이 승리한다.
기본 게임속도가 빠름이기 때문에, 게임시간은 실제시간보다 약간 빠르다
(게임 속도가 보통일 때 실제시간과 같음, 게임시간 600초는 약 7분).
